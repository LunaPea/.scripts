#!/usr/bin/env python3

from threading import Thread
from pynput import mouse
import time
import struct
import uinput
import keyboard
import time
import os
import mouse as mouse2



stop_mouse = False
mice = open( "/dev/input/mouse0", "rb" );

events = (uinput.ABS_X + (-5000, 5000, 0, 0), uinput.ABS_Y + (-3000, 4500, 0, 0), uinput.ABS_RX + (-100, 100, 0, 0), uinput.ABS_RY + (-100, 100, 0, 0),
        uinput.BTN_TL, uinput.BTN_TR, uinput.BTN_START, uinput.BTN_SELECT, uinput.BTN_TL2, uinput.BTN_TR2, uinput.BTN_NORTH, uinput.BTN_SOUTH, uinput.BTN_EAST, uinput.BTN_WEST, uinput.BTN_THUMBL, uinput.BTN_THUMBR
        )
device = uinput.Device(events)

def key_press(key): # toggle mouse movement
    global stop_mouse
    if key.name == "f1":
        if stop_mouse == True:
            stop_mouse = False
        else:
            stop_mouse = True

keyboard.on_press(key_press)

def get_mouse_event(): 
    global X
    global Y
    speed = 110
    X = 0
    Y = 0
    i = 0
    while True:
        buf = mice.read(3);
        x,y = struct.unpack( "bb", buf[1:] );
        X += x
        Y += y
        i += 1
        if i == 3:
            device.emit(uinput.ABS_X, X*speed)
            device.emit(uinput.ABS_Y, Y*speed)
            print(X,Y)
            X = 0
            Y = 0
            i = 0

def mouse_move():
    i = 0
    j = 0
    global X
    global Y
    global Z
    Z = 0
    pX = 0
    pY = 0
    while True:
        time.sleep(0.01)
        device.emit(uinput.ABS_RX, Z)
        if X == pX and Y == pY:
            i += 1
            if i > 2:
                device.emit(uinput.ABS_X, 0)
                device.emit(uinput.ABS_Y, 0)
        else:
            i = 0
        pX = X
        pY = Y

def mouse_no_move():
    global stop_mouse
    while True:
        if stop_mouse == True:
            mouse2.move(10000,10000)

def on_click(x, y, button, pressed):
    global Z
    if button == mouse.Button.right and pressed:
        Z = 100
    if button == mouse.Button.left and pressed:
        Z = -100
    if not pressed:
        Z = 0
 
def on_scroll(x, y, dx, dy):
    pass
def on_move(x, y):
    pass

   

listener = mouse.Listener(
on_move=on_move,
on_click=on_click,
on_scroll=on_scroll)
listener.start()


Thread(target = get_mouse_event).start()
Thread(target = mouse_move).start()
Thread(target = mouse_no_move).start()
