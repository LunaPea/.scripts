#!/usr/bin/env python3

import argparse
import subprocess

parser = argparse.ArgumentParser()
parser.add_argument(
    "-c", "--command", help="command", required=True
)
args = parser.parse_args()

spotify_status = subprocess.getoutput("pgrep spotify")
mocp_status = subprocess.getoutput("mocp -i")
current_volume = int(subprocess.getoutput("pa_volume 'OSS Emulation[mocp]'").replace("client: OSS Emulation[mocp]","").replace(" ","").replace("%",""))

if "FATAL_ERROR: The server is not running!" in mocp_status:
    subprocess.os.system("padsp mocp -S")
    mocp_status = subprocess.getoutput("mocp -i")

if args.command == "state":
    print(subprocess.getoutput("mocp -i | grep State:").split("State: ",1)[1])

if "JBL TUNE500BT" in subprocess.getoutput("pulseaudio-control --sink-nicknames-from 'device.description' --sink-nickname 'alsa_output.pci-0000_00_1b.0.analog-stereo:  Speakers' output"):
    if spotify_status:

        current_volume = int(subprocess.getoutput("pa_volume music").replace("client: music","").replace(" ","").replace("%",""))
        
        if "PLAY" in mocp_status:
            subprocess.os.system("mocp -P")
        if args.command == "u":
            subprocess.os.system("pa_volume music "+str(current_volume+5))
        elif args.command == "d":
            subprocess.os.system("pa_volume music "+str(current_volume-5))

        elif args.command == "G":
            subprocess.os.system("playerctl -p spotify play-pause")
        elif args.command == "f":
            subprocess.os.system("playerctl -p spotify next")
        elif args.command == "r":
            subprocess.os.system("playerctl -p spotify previous")

    elif not "STOP" in mocp_status:

        current_volume = int(subprocess.getoutput("pa_volume 'OSS Emulation[mocp]'").replace("client: OSS Emulation[mocp]","").replace(" ","").replace("%",""))

        if args.command == "u":
            subprocess.os.system("pa_volume 'OSS Emulation[mocp]' "+str(current_volume+5))
        elif args.command == "d":
            subprocess.os.system("pa_volume 'OSS Emulation[mocp]' "+str(current_volume-5))
        
        else:
            subprocess.os.system("mocp -{}".format(args.command))
        print("hello")
    else:
        current_volume = int(subprocess.getoutput("pa_volume Firefox").replace("client: Firefox","").replace(" ","").replace("%",""))
        
        if args.command == "u":
            subprocess.os.system("pa_volume Firefox "+str(current_volume+5))
        elif args.command == "d":
            subprocess.os.system("pa_volume Firefox "+str(current_volume-5))

        elif args.command == "G":
            subprocess.os.system("playerctl -p firefox play-pause")
        elif args.command == "f":
            subprocess.os.system("playerctl -p firefox next")
        elif args.command == "r":
            subprocess.os.system("playerctl -p firefox previous")
