#!/usr/bin/env python
import os
import sys
import re
from rofi import Rofi

r = Rofi()
previous_selection = None


def get_torrent_from_user(torrent):
    torrent = torrent.replace(" ", "+")
    html = os.popen(
        '''curl -s "https://nyaa.si/?f=0&c=0_0&s=seeders&o=desc&q={}"'''.format(torrent)).read()

    torrents = []
    while True:
        start = html.find("<tr class=")
        if start == -1:
            break
        end = html.find("</tr>", start)
        title = html[start:end].split('<a href="/view/')[-1].split("</a>")[0]
        title = title.split('">')[1]
        magnet = html[start:end].split(
            '<a href="magnet:?xt=urn:')[-1].split("</a>")[0]
        magnet = magnet.split('">')[0]
        magnet = "magnet:?xt=urn:" + magnet
        some_data = html[start:end].split('</a>')[-1].split('<td')
        size = some_data[1].split(">")[1].split("<")[0]
        seeders = some_data[3].split(">")[1].split("<")[0]
        leechers = some_data[4].split(">")[1].split("<")[0]
        downloads = some_data[5].split(">")[1].split("<")[0]
        category = html[start:end].split('alt="')[-1].split('"')[0]
        if category == "Anime - English-translated":
            torrents.append(
                [title, magnet, size, seeders, leechers, downloads])

        html = html[end:]

    torrents_formated = []

    for torrent in torrents:
        torrents_formated.append(
            "[{}] [{}] [{}] {}".format(torrent[3], torrent[4], torrent[2], torrent[0]))

    torrent_choice = r.select("Torrents", torrents_formated)
    if torrent_choice == (-1, -1):
        exit()

    magnet = torrents[torrent_choice[0]][1]
    torrent = torrents[torrent_choice[0]]
    return torrent, magnet


if len(sys.argv) < 2:
    torrent = r.text_entry(
        "Torrent",
        lines=1,)
    torrent, magnet = get_torrent_from_user(torrent)
elif sys.argv[1] == "":
    torrent = r.text_entry(
        "Torrent",
        lines=1,)
    torrent, magnet = get_torrent_from_user(torrent)
elif sys.argv[1] == "-last":
    f = open(os.path.expanduser("~/.cache/nyaa.last"), "r")
    exec(f.readline())
    exec(f.readline())
    f.close()
    magnet = torrent[1]
    previous_selection = last_file
else:
    torrent = " ".join(sys.argv[1:])
    torrent, magnet = get_torrent_from_user(torrent)


ansi_escape = re.compile(r'\x1B(?:[@-Z\\-_]|\[[0-?]*[ -/]*[@-~])')

# get list of files in torrent
files = os.popen('''peerflix "{}" -l'''.format(magnet)).read()
# remove the color codes
files = ansi_escape.sub('', files)
files = files.split("\n")[1:]
files_formated = []
for file in files:
    if file.strip() == "":
        break
    files_formated.append(file.strip())
while True:
    tmp_files_formated = files_formated.copy()
    if previous_selection != None:
        tmp_files_formated.insert(0, previous_selection)
        previous_selection_index = int(previous_selection.split(" ")[0])
        if previous_selection_index+1 < len(files_formated):
            tmp_files_formated.insert(1, files[previous_selection_index+1])
    file_choice = r.select("File", tmp_files_formated)[0]
    if file_choice == -1:
        exit()
    file_choice = int(tmp_files_formated[file_choice].split(" ")[0])
    previous_selection = files_formated[file_choice]
    file_choice = int(files_formated[file_choice].split(" ")[0])
    f = open(os.path.expanduser("~/.cache/nyaa.last"), "w")
    f.write("torrent = " + str(torrent))
    f.write('\nlast_file = "' + str(files[file_choice]) + '"')
    f.close()
    os.system('''peerflix "{}" -i {} -f ~/.cache/peerflix/ --mpv -- --no-input-default-bindings --no-resume-playback --slang=eng --alang=jpn'''.format(magnet, file_choice))
    f = open(os.path.expanduser("~/.cache/watch-history"), "a")
    f.write(torrent[0] + files[file_choice] + "\n")
    f.close()
